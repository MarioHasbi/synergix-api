const Joi = require('@hapi/joi').extend(require('@hapi/joi-date'))

const schemas = {
    detail: Joi.object().keys({
        id: Joi.number().min(1).required()
    }),
    create: Joi.object().keys({
        direction_id: Joi.number().min(1).required(),
        channel: Joi.string().allow(null).allow("").optional(),
        unique_id: Joi.string().allow(null).allow("").optional(),
        dnid: Joi.string().allow(null).allow("").optional(),
        extension: Joi.string().allow(null).allow("").optional(),
        phone_number: Joi.string().min(1).required(),
        call_line_id: Joi.number().min(1).required(),
        customer_id: Joi.number().min(1).required(),
        campaign_id: Joi.number().min(1).required(),
        outbound_status_id: Joi.number().min(1).required(),
        outbound_category_id: Joi.number().allow(null).allow("").optional(),
        outbound_category_detail_id: Joi.number().allow(null).allow("").optional(),
        call_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("call_date must be a valid datetime format").min(1).required(),
        bridge_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("bridge_date must be a valid datetime format").allow(null).allow("").optional(),
        pickup_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("pickup_date must be a valid datetime format").allow(null).allow("").optional(),
        disconected_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("disconected_date must be a valid datetime format").allow(null).allow("").optional(),
        hangup_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("hangup_date must be a valid datetime format").allow(null).allow("").optional(),
        dropcall_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("dropcall_date must be a valid datetime format").allow(null).allow("").optional(),
        speed_answer: Joi.string().allow(null).allow("").optional(),
        talk_duration: Joi.string().allow(null).allow("").optional(),
        call_duration: Joi.string().allow(null).allow("").optional(),
        acw_duration: Joi.string().allow(null).allow("").optional(),
        hold_duration: Joi.string().allow(null).allow("").optional(),
        mute_duration: Joi.string().allow(null).allow("").optional(),
        host_address: Joi.string().allow(null).allow("").optional(),
        filename: Joi.string().allow(null).allow("").optional(),
        pbx_filename: Joi.string().allow(null).allow("").optional(),
        path: Joi.string().allow(null).allow("").optional(),
        note: Joi.string().allow(null).allow("").optional(),
        user_id: Joi.number().allow(null).allow("").optional(),
        created_at: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("created_at must be a valid datetime format").min(1).required(),
        created_by: Joi.number().allow(null).allow("").optional(),
        
    }),
    update: Joi.object().keys({
        direction_id: Joi.number().allow(null).allow("").optional(),
        channel: Joi.string().allow(null).allow("").optional(),
        unique_id: Joi.string().allow(null).allow("").optional(),
        dnid: Joi.string().allow(null).allow("").optional(),
        extension: Joi.string().allow(null).allow("").optional(),
        phone_number: Joi.string().allow(null).allow("").optional(),
        call_line_id: Joi.number().allow(null).allow("").optional(),
        customer_id: Joi.number().allow(null).allow("").optional(),
        campaign_id: Joi.number().allow(null).allow("").optional(),
        outbound_status_id: Joi.number().allow(null).allow("").optional(),
        outbound_category_id: Joi.number().allow(null).allow("").optional(),
        outbound_category_detail_id: Joi.number().allow(null).allow("").optional(),
        call_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("call_date must be a valid datetime format").allow(null).allow("").optional(),
        bridge_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("bridge_date must be a valid datetime format").allow(null).allow("").optional(),
        pickup_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("pickup_date must be a valid datetime format").allow(null).allow("").optional(),
        disconected_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("disconected_date must be a valid datetime format").allow(null).allow("").optional(),
        hangup_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("hangup_date must be a valid datetime format").allow(null).allow("").optional(),
        dropcall_date: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("dropcall_date must be a valid datetime format").allow(null).allow("").optional(),
        speed_answer: Joi.string().allow(null).allow("").optional(),
        talk_duration: Joi.string().allow(null).allow("").optional(),
        call_duration: Joi.string().allow(null).allow("").optional(),
        acw_duration: Joi.string().allow(null).allow("").optional(),
        hold_duration: Joi.string().allow(null).allow("").optional(),
        mute_duration: Joi.string().allow(null).allow("").optional(),
        host_address: Joi.string().allow(null).allow("").optional(),
        filename: Joi.string().allow(null).allow("").optional(),
        pbx_filename: Joi.string().allow(null).allow("").optional(),
        path: Joi.string().allow(null).allow("").optional(),
        note: Joi.string().allow(null).allow("").optional(),
        user_id: Joi.number().allow(null).allow("").optional(),
        created_at: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("created_at must be a valid datetime format").allow(null).allow("").optional(),
        created_by: Joi.number().allow(null).allow("").optional(),
        updated_at: Joi.string().regex(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9]$/).message("updated_at must be a valid datetime format").min(1).required(),
        updated_by: Joi.number().min(1).required()
    }),
}

module.exports = schemas
